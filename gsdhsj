#https://www.pygame.org/docs/ref/key.html
##https://www.geeksforgeeks.org/creating-start-menu-in-pygame/ 
#opengameart.org/content/platformer-resources
#https://www.piskelapp.com/p/create/sprite 

import sys 
import pygame
import os
import random

pygame.init()
WIDTH = 480
HEIGHT = 600
screen = pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption('Space Invaders')

#defining colours
BLACK = (0,0,0)
WHITE = (255,255,255)
PINK = (255,192,203)
SAGE = (115,134,120)

#object class
class Player(pygame.sprite.Sprite):
    #player sprite
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load('usersprite.png').convert()
        self.image = pygame.transform.scale_by(self.image,0.3)
        self.rect = self.image.get_rect()
        self.rect.center = (WIDTH//2, (HEIGHT - 8))
        self.speedx = 0

    #updates the sprites every animation loop
    def update(self):
        self.speedx = 0
        #list of all keys which have been pressed    
        key_collection = pygame.key.get_pressed()
        if key_collection[pygame.K_a] and self.rect.left > 0:
            self.speedx = -3
        if key_collection[pygame.K_d] and self.rect.right < WIDTH:
            self.speedx = 3
        self.rect.x += self.speedx

        #shoot
        if key_collection[pygame.K_RETURN]:
            bullet = Bullets(self.rect.center)
            bullet_group.add(bullet)
            

#create bullets class
class Bullets(pygame.sprite.Sprite):
    def __init__(self,center):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((5, 5))
        self.image.fill(WHITE)
        self.rect = self.image.get_rect()
        self.rect.center = center

    def update(self):
        self.rect.y -= 4
        
    



#container class to hold and manage multiple sprite objects
sprite_group = pygame.sprite.Group()
bullet_group = pygame.sprite.Group()
#creating player object
player = Player()
#adds the player to the sprite collection group
sprite_group.add(player)
    
#pygame running
run = True
#game loop
while run:
    #loops over the Event objects which are to be returned by pygame.event.get()
    for event in pygame.event.get():
        #if the sprite type is QUIT it will quit the pygame and the program altogether
        if event.type == pygame.QUIT:
            #ends the while loop and pygame stops running
            run = False


    #updates
    sprite_group.update() 
    bullet_group.update()
    #draws the background
    screen.fill(BLACK)
    sprite_group.draw(screen)
    bullet_group.draw(screen)
    #updates the full display surface to the screen
    pygame.display.flip()
#quit pygame
pygame.quit()


